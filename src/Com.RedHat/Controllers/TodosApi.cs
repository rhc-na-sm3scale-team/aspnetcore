/*
 * Todo
 *
 * My Todo list API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: deven.phillips@redhat.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Com.RedHat.Attributes;
using Com.RedHat.Models;

namespace Com.RedHat.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TodosApiController : ControllerBase
    { 
        /// <summary>
        /// Create a Todo
        /// </summary>
        /// <remarks>Creates a new instance of a &#x60;Todo&#x60;.</remarks>
        /// <param name="todo">A new &#x60;Todo&#x60; to be created.</param>
        /// <response code="200">Successful response.</response>
        [HttpPost]
        [Route("/api/v1/todos")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateTodo")]
        [SwaggerResponse(statusCode: 200, type: typeof(Todo), description: "Successful response.")]
        public virtual IActionResult CreateTodo([FromBody]Todo todo)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Todo));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\",\n  \"title\" : \"Example Todo\",\n  \"description\" : \"This is a Todo entity with a description\",\n  \"created\" : \"2020-05-14T09:00:00.000Z\",\n  \"dueDate\" : \"2020-05-20T09:00:00.000Z\",\n  \"complete\" : false\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Todo>(exampleJson)
            : default(Todo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete a Todo
        /// </summary>
        /// <remarks>Deletes an existing &#x60;Todo&#x60;.</remarks>
        /// <param name="todoId">A unique identifier for a &#x60;Todo&#x60;.</param>
        /// <response code="204">Successful response.</response>
        [HttpDelete]
        [Route("/api/v1/todos/{todoId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteTodo")]
        public virtual IActionResult DeleteTodo([FromRoute (Name = "todoId")][Required]Guid todoId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get a Todo
        /// </summary>
        /// <remarks>Gets the details of a single instance of a &#x60;Todo&#x60;.</remarks>
        /// <param name="todoId">A unique identifier for a &#x60;Todo&#x60;.</param>
        /// <response code="200">Successful response - returns a single &#x60;Todo&#x60;.</response>
        [HttpGet]
        [Route("/api/v1/todos/{todoId}")]
        [ValidateModelState]
        [SwaggerOperation("GetTodo")]
        [SwaggerResponse(statusCode: 200, type: typeof(Todo), description: "Successful response - returns a single &#x60;Todo&#x60;.")]
        public virtual IActionResult GetTodo([FromRoute (Name = "todoId")][Required]Guid todoId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Todo));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\",\n  \"title\" : \"Example Todo\",\n  \"description\" : \"This is a Todo entity with a description\",\n  \"created\" : \"2020-05-14T09:00:00.000Z\",\n  \"dueDate\" : \"2020-05-20T09:00:00.000Z\",\n  \"complete\" : false\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Todo>(exampleJson)
            : default(Todo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List All todos
        /// </summary>
        /// <remarks>Gets a list of all &#x60;Todo&#x60; entities.</remarks>
        /// <response code="200">Successful response - returns an array of &#x60;Todo&#x60; entities.</response>
        [HttpGet]
        [Route("/api/v1/todos")]
        [ValidateModelState]
        [SwaggerOperation("Gettodos")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Todo>), description: "Successful response - returns an array of &#x60;Todo&#x60; entities.")]
        public virtual IActionResult Gettodos()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Todo>));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\",\n  \"title\" : \"Example Todo\",\n  \"description\" : \"This is a Todo entity with a description\",\n  \"created\" : \"2020-05-14T09:00:00.000Z\",\n  \"dueDate\" : \"2020-05-20T09:00:00.000Z\",\n  \"complete\" : false\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Todo>>(exampleJson)
            : default(List<Todo>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update a Todo
        /// </summary>
        /// <remarks>Updates an existing &#x60;Todo&#x60;.</remarks>
        /// <param name="todoId">A unique identifier for a &#x60;Todo&#x60;.</param>
        /// <param name="todo">Updated &#x60;Todo&#x60; information.</param>
        /// <response code="200">Successful response.</response>
        [HttpPut]
        [Route("/api/v1/todos/{todoId}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateTodo")]
        [SwaggerResponse(statusCode: 200, type: typeof(Todo), description: "Successful response.")]
        public virtual IActionResult UpdateTodo([FromRoute (Name = "todoId")][Required]Guid todoId, [FromBody]Todo todo)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Todo));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\",\n  \"title\" : \"Example Todo\",\n  \"description\" : \"This is a Todo entity with a description\",\n  \"created\" : \"2020-05-14T09:00:00.000Z\",\n  \"dueDate\" : \"2020-05-20T09:00:00.000Z\",\n  \"complete\" : false\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Todo>(exampleJson)
            : default(Todo);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
